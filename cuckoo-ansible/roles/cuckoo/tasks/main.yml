---

- name: include environment-specific variables
  include_vars:
      dir: vars/
  when: ansible_facts['os_family']|lower == 'debian'

- name: install package dependencies
  sudo: yes
  apt:
      name: "{{ cuckoo_req  }}"
      state: present
      update_cache: yes
  register: pkg_status
  failed_when: pkg_status is failed

- name: install required pip packages
  become: true
  become_user: "{{ cuckoo_user  }}"
  include: pip_pkgs.yml

- name: install virtualbox if defined in deafults config
  include: vbox.yml
  when: vm_backend.virtualbox|bool

- name: install kvm if defined in deafults config
  include: kvm.yml
  when: vm_backend.kvm|bool

- name: install vmware if defined in deafults config
  include: vmware.yml
  when: vm_backend.vmware|bool

- name: install and configure inetsim service
  include: inetsim.yml
  become: true

- name: install volatility for memory forensics
  become: true
  become_user: "{{ cuckoo_user  }}"
  include: volatility.yml
  when: enable_volatility|bool

- name: install vmcloak for vm provisioning, creating, modifying
  become_user: "{{ cuckoo_user  }}"
  become_flags: "-E"
  include: vmcloak.yml

- name: configure tcpdump
  become: true
  include: tcpdump.yml

- name: config guest to host/internet access through iptables
  become: true
  include: fw-config.yml

- name: config cuckoo sandbox
  become_user: "{{ cuckoo_user }}"
  template:
    src: cuckoo.conf.j2
    dest: "{{ cuckoo_cwd }}/conf/cuckoo.conf"
    owner: "{{ cuckoo_user }}"
    group: "{{ cuckoo_user }}"
    backup: yes

- name: activate db for results
  become_user: "{{ cuckoo_user }}"
  replace:
    path: "{{ cuckoo_cwd }}/conf/reporting.conf"
    regexp: '(\[mongodb\][^[]*)enabled = no'
    replace: '\1enabled = yes'
    owner: "{{ cuckoo_user }}"
    group: "{{ cuckoo_user }}"

- name: fetch all the latest Cuckoo Signaturs, Yara rules
  become_user: "{{ cuckoo_user }}"
  shell: |
   source {{ cuckoo_virtenv }}/bin/activate
   cuckoo community
  args:
    executable: /bin/bash
